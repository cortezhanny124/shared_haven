plugins {
    id "com.android.application"
    // id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.android" // version "1.9.20"
}

android {
    namespace = "com.bitcoin.sharedhaven.testnet"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.bitcoin.sharedhaven.testnet"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        // minSdk = flutter.minSdkVersion
        minSdk = 26
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    // flavorDimensions "network"
    // productFlavors {
    //     bitcoin_mainnet {
    //         dimension "network"
    //         applicationId "com.bitcoin.sharedhaven.mainnet" // Unique ID for mainnet
    //         versionNameSuffix "-mainnet"
    //     }

    //     bitcoin_testnet {
    //         dimension "network"
    //         applicationId "com.bitcoin.sharedhaven.testnet" // Unique ID for testnet
    //         versionNameSuffix "-testnet"
    //     }
    // }

     // 🔐 Load keystore (fail loudly if missing)
    def keystorePropsFile = rootProject.file("key.properties")
    def keystoreProps = new Properties()
    if (!keystorePropsFile.exists()) {
        throw new GradleException("Missing android/key.properties for release signing")
    }
    keystoreProps.load(new FileInputStream(keystorePropsFile))

    signingConfigs {
        release {
            storeFile file(keystoreProps['storeFile'])
            storePassword keystoreProps['storePassword']
            keyAlias keystoreProps['keyAlias']
            keyPassword keystoreProps['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false  // you can re-enable later
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
            signingConfig signingConfigs.release   // ✅ no equals, standard Groovy DSL
        }
        debug {
            // uses debug keystore implicitly
        }
    }

    // 📦 Rename ONLY APKs (avoid touching bundle outputs)
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def name = output?.outputFileName
            if (name != null && name.endsWith(".apk")) {
                output.outputFileName =
                    "SharedHaven-${variant.flavorName ?: 'noflavor'}-${variant.buildType.name}.apk"
            }
        }
    }
}

flutter {
    source = "../.."
}

kotlin {
    jvmToolchain(17) // Automatically configures JDK 17
}

 dependencies {
        implementation 'com.google.errorprone:error_prone_annotations:2.11.0'
        implementation 'javax.annotation:javax.annotation-api:1.3.2'
        implementation 'com.google.crypto.tink:tink-android:1.6.1'
    }